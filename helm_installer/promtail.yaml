apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail-config
  namespace: tt
data:
  config.yaml: |
    server:
      http_listen_port: 9080
      grpc_listen_port: 0
      log_level: "info"

    positions:
      filename: /tmp/positions.yaml

    clients:
      - url: http://loki-gateway.tt.svc.cluster.local/loki/api/v1/push
        tenant_id: fake  # This adds the X-Scope-OrgID header

    scrape_configs:
      - job_name: docker-logs
        static_configs:
          - targets:
              - localhost
            labels:
              job: docker-logs
              __path__: /var/log/containers/*.log
        pipeline_stages:
          - regex:
                expression: '/var/log/containers/(?P<compose_service>[^/]+)\.log$'
                source: filename
          - labels:
              compose_service:
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: promtail
spec:
  replicas: 1
  selector:
    matchLabels:
      app: promtail
  template:
    metadata:
      labels:
        app: promtail
    spec:
      containers:
      - name: promtail
        image: grafana/promtail:3.4.3
        args:
        - -config.file=/etc/promtail/config.yaml
        volumeMounts:
        - name: shared-logs-volume
          mountPath: /var/log/containers
        - name: promtail-config
          mountPath: /etc/promtail
      volumes:
      - name: shared-logs-volume
        persistentVolumeClaim:
          claimName: shared-logs-pvc
      - name: promtail-config
        configMap:
          name: promtail-config
---
# PersistentVolumeClaim for shared logs (requires ReadWriteMany PV)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: shared-logs-pvc
  namespace: tt
spec:
  accessModes:
    - ReadWriteMany # Needed for multiple pods to write/read simultaneously
  resources:
    requests:
      storage: 2Gi # Adjust size as needed
  # storageClassName: your-storage-class # Uncomment and specify if you have a specific StorageClass for RWX
