# 3. Promtail to ship logs to Loki with JSON parsing
apiVersion: apps/v1
kind: Deployment
metadata:
  name: promtail
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: promtail
  template:
    metadata:
      labels:
        app: promtail
    spec:
      containers:
      - name: promtail
        image: grafana/promtail:3.4.3
        args:
        - -config.file=/etc/promtail/config.yaml
        volumeMounts:
        - name: shared-logs-volume
          mountPath: /var/log/containers
        - name: promtail-config
          mountPath: /etc/promtail
      volumes:
      - name: shared-logs-volume
        persistentVolumeClaim:
          claimName: shared-logs-pvc
      - name: promtail-config
        configMap:
          name: promtail-config
---
# # Deployment for Grafana
# Validar integraci√≥n con Loki y Tempo
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   labels:
#     app: grafana
#   name: grafana
#   namespace: tt
# spec:
#   selector:
#     matchLabels:
#       app: grafana
#   template:
#     metadata:
#       labels:
#         app: grafana
#     spec:
#       securityContext:
#         fsGroup: 472
#         supplementalGroups:
#           - 0
#       containers:
#       - name: grafana
#         image: grafana/grafana:latest
#         imagePullPolicy: IfNotPresent
#         ports:
#           - containerPort: 3000
#             name: http-grafana
#             protocol: TCP
#         readinessProbe:
#           failureThreshold: 3
#           httpGet:
#             path: /robots.txt
#             port: 3000
#             scheme: HTTP
#           initialDelaySeconds: 10
#           periodSeconds: 30
#           successThreshold: 1
#           timeoutSeconds: 2
#         livenessProbe:
#           failureThreshold: 3
#           initialDelaySeconds: 30
#           periodSeconds: 10
#           successThreshold: 1
#           tcpSocket:
#             port: 3000
#           timeoutSeconds: 1
#         resources:
#           requests:
#             cpu: 250m
#             memory: 750Mi
#         volumeMounts:
#         - name: grafana-datasources-volume
#           mountPath: /etc/grafana/provisioning/datasources # Mount datasources config directory
#         - name: grafana-dashboards-config-volume
#           mountPath: /etc/grafana/provisioning/dashboards/dashboards.yaml
#           subPath: dashboards.yaml # Mount specific file from ConfigMap
#         - name: grafana-dashboard-files-volume
#           mountPath: /etc/grafana/dashboards # Mount dashboard files directory
#         - name: grafana-pv
#           mountPath: /var/lib/grafana # Mount path for Grafana data
#       volumes:
#       - name: grafana-datasources-volume
#         configMap:
#           name: grafana-datasources # Refers to the grafana-datasources ConfigMap
#       - name: grafana-dashboards-config-volume
#         configMap:
#           name: grafana-dashboards # Refers to the grafana-dashboards ConfigMap
#       - name: grafana-dashboard-files-volume
#         configMap:
#           name: grafana-dashboard-files # Refers to the grafana-dashboard-files ConfigMap
#       - name: grafana-pv
#         persistentVolumeClaim:
#           claimName: grafana-pvc